import { createSlice } from '@reduxjs/toolkit';
import { GlobalState } from '../../types';

const getTheme = () => {
   let theme = localStorage.getItem('theme');

   if (theme) return JSON.parse(theme);
   else return true;
};

const initialState: GlobalState = {
   darkMode: getTheme(),
   invoiceModal: false,
   deleteModal: false,
   myModal: false,
};

export const globalSlice = createSlice({
   name: 'global',
   initialState,
   // The `reducers` field lets us define reducers and generate associated actions
   reducers: {
      toggleTheme: (state) => {
         state.darkMode = !state.darkMode;
      },
      toggleInvoiceModal: (state) => {
         state.invoiceModal = !state.invoiceModal;
      },
      toggleDeleteModal: (state) => {
         state.deleteModal = !state.deleteModal;
      },
      toggleMyModal: (state) => {
         state.myModal = !state.myModal;
         state.deleteModal = false;
         state.invoiceModal = false;
      },
      closeMyModal: (state) => {
         state.myModal = false;
         state.deleteModal = false;
         state.invoiceModal = false;
      },
   },
   // The `extraReducers` field lets the slice handle actions defined elsewhere,
   // including actions generated by createAsyncThunk or in other slices.
});

export const {
   toggleTheme,
   toggleInvoiceModal,
   toggleDeleteModal,
   toggleMyModal,
   closeMyModal,
} = globalSlice.actions;

export default globalSlice.reducer;
