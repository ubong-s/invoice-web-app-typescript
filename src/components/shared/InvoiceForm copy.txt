import styled from 'styled-components';
import { breakpoints, misc } from '../../styles/globalStyles';

const InvoiceForm = () => {
   return (
      <InvoiceFormRoot>
         <h2>New Invoice</h2>

         <Form>
            {/* Bills From */}
            <h4>Bill From</h4>
            <div className='form-group'>
               <label htmlFor='from_street'>
                  Street Address
                  <small>can't be empty</small>
               </label>
               <input type='text' name='from_street' id='from_street' />
            </div>
            <div className='three-columns'>
               <div className='form-group'>
                  <label htmlFor='from_city'>
                     City<small>can't be empty</small>
                  </label>
                  <input type='text' name='from_city' id='from_city' />
               </div>
               <div className='form-group'>
                  <label htmlFor='from_post_code'>
                     Post Code<small>can't be empty</small>
                  </label>
                  <input
                     type='text'
                     name='from_post_code'
                     id='from_post_code'
                  />
               </div>

               <div className='form-group'>
                  <label htmlFor='from_country'>Country</label>
                  <input type='text' name='from_country' id='from_country' />
               </div>
            </div>

            {/* Bills To */}
            <h4>Bill To</h4>
            <div className='form-group'>
               <label htmlFor='client_name'>Client's Name</label>
               <input type='text' name='client_name' id='client_name' />
            </div>
            <div className='form-group'>
               <label htmlFor='client_email'>Client's Email</label>
               <input type='email' name='client_email' id='client_email' />
            </div>
            <div className='form-group'>
               <label htmlFor='to_street'>Street Address</label>
               <input type='text' name='to_street' id='to_street' />
            </div>
            <div className='three-columns'>
               <div className='form-group'>
                  <label htmlFor='to_city'>City</label>
                  <input type='text' name='to_city' id='to_city' />
               </div>
               <div className='form-group'>
                  <label htmlFor='to_post_code'>Post Code</label>
                  <input type='text' name='to_post_code' id='to_post_code' />
               </div>
               <div className='form-group'>
                  <label htmlFor='to_country'>Country</label>
                  <input type='text' name='to_country' id='to_country' />
               </div>
            </div>

            {/* Invoice */}
            <div className='two-columns'>
               <div className='form-group'>
                  <label htmlFor='invoice_date'>
                     Invoice Date<small>can't be empty</small>
                  </label>
                  <input type='date' name='invoice_date' id='invoice_date' />
               </div>
               <div className='form-group'>
                  <label htmlFor='payment_terms'>Payment Terms</label>
                  <select name='payment_terms' id='payment_terms'>
                     <option value='Net 1 Day'>Net 1 Day</option>
                     <option value='Net 7 Days'>Net 7 Days</option>
                     <option value='Net 14 Days'>Net 14 Days</option>
                     <option value='Net 30 Days'>Net 30 Days</option>
                  </select>
               </div>
            </div>
            <div className='form-group'>
               <label htmlFor='project_desc'>Project Description</label>
               <input type='text' name='project_desc' id='project_desc' />
            </div>
            <span>Item List</span>
         </Form>
      </InvoiceFormRoot>
   );
};

export default InvoiceForm;

const InvoiceFormRoot = styled.div`
   padding: 1rem 0;
   width: 90%;
   height: 100%;
   margin: auto;
   z-index: 30;

   h4 {
      margin: 2rem 0 1rem;
      color: ${(props) => props.theme.accent};
   }

   .two-columns {
      display: grid;
      column-gap: 1.5rem;
      grid-template-columns: repeat(2, 1fr);
   }

   .three-columns {
      display: grid;
      column-gap: 1.5rem;
      grid-template-columns: repeat(2, 1fr);

      div:last-of-type {
         grid-column: 1 /3;
      }
   }

   @media screen and (min-width: ${breakpoints.tablet}) {
      .three-columns {
         grid-template-columns: repeat(3, 1fr);

         div:last-of-type {
            grid-column: unset;
         }
      }
   }
`;

const Form = styled.form`
   margin: 2rem 0;
   max-height: 65vh;
   overflow-y: scroll;
   padding-right: 1rem;

   &::-webkit-scrollbar {
      width: 0.5em;
   }

   &::-webkit-scrollbar-thumb {
      background-color: ${(props) => props.theme.scrollBar};
      border-radius: 10px;
      /* outline: 1px solid slategrey; */
   }

   label {
      display: flex;
      justify-content: space-between;
      align-items: center;
   }

   input,
   select {
      width: 100%;
      padding: 1rem;
      border-radius: 5px;
      border: 1px solid transparent;
      outline: none;
      background-color: ${(props) => props.theme.cardBody};
      color: ${(props) => props.theme.boldText};
      transition: ${misc.transition.ease};

      &:hover,
      &:focus {
         border: 1px solid ${(props) => props.theme.accent};
      }
   }
   .form-group {
      padding: 0.75rem 0;
   }

   @media screen and (min-width: ${breakpoints.tablet}) {
      form {
         max-height: 70vh;
      }
   }
`;
